:root {
  --body-color: #0d1117;
  --blue-color: #3e8db1;
  --red-color: #ec1153;
  --hovered: #2c3542;
  --number: "0";
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
}

.img-logo {
  width: 250px;
  margin: 15px 0;
}

body {
  background-color: var(--body-color);
  min-height: 100vh;
  display: flex;
  align-items: center;
  overflow-x: hidden;
  flex-direction: column;
}

.welcome-screen {
  position: absolute;
  z-index: 3;
  background-color: rgba(0, 0, 0, 0.596);
  width: 100%;
  top: 0;
  left: 0;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 20px;
}

.introduction,
.game-instruction {
  background-color: var(--body-color);
  border: 1px solid white;
  width: 500px;
  min-height: 400px;
  border-radius: 10px;
  text-align: center;
  color: white;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 10px 10px;
}
.introduction {
  animation: intAnimate ease-in 0.8s;
}

.game-instruction {
  animation: insAnimate ease-in 0.8s;
}

@keyframes intAnimate {
  from {
    transform: translateX(520px);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes insAnimate {
  from {
    transform: translateY(800px);
  }
  to {
    transform: translateY(0px);
  }
}

.play-button {
  width: 100%;
  height: 40px;
  border: none;
  border-radius: 10px;
  background-color: var(--red-color);
  color: white;
  transition: 0.3s;
  cursor: pointer;
}

.play-button:disabled {
  background-color: gray;
}

.introduction h3,
.game-instruction h3 {
  font-size: 1.8rem;
}

.choose-enemy {
  margin-top: 10px;
}

.choose-enemy label {
  font-weight: bold;
}

ul li {
  list-style: none;
}

.container-game {
  width: 1000px;
  min-height: 600px;
  border: 1px solid white;
  display: flex;
  padding: 15px 0;
}

.game-board {
  flex-grow: 3;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* .tile-section {
  width: 100%;
  height: 30px;
  background-color: red;
} */

.current-playing {
  margin-top: 30px;
  color: white;
  display: flex;
  align-items: center;
}

.hex-score {
  display: flex;
  justify-content: center;
  align-items: center;
  /* text-align: center; */
  height: 45px;
  width: 45px;
  background-color: var(--red-color);
  -webkit-clip-path: polygon(25% 5%, 75% 5%, 100% 50%, 75% 95%, 25% 95%, 0% 50%);
  clip-path: polygon(25% 5%, 75% 5%, 100% 50%, 75% 95%, 25% 95%, 0% 50%);
  margin-left: 20px;
}

.current-score {
  display: flex;
  width: 25%;
  justify-content: space-between;
  color: white;
  margin-top: 12px;
  text-align: center;
}

.player-1,
.player-2 {
  display: inline-block;
  width: 15px;
  height: 15px;
  margin-right: 5px;
}

.player-1 {
  background-color: var(--red-color);
}
.player-2 {
  background-color: var(--blue-color);
}

.current-score p {
  font-size: 1.1rem;
}
.current-score h3 {
  font-size: 1.3rem;
  font-weight: bold;
}

.score-board {
  border-left: 1px solid white;
  flex-grow: 1;
  padding: 10px 28px;
  color: white;
  display: flex;
  align-items: center;
  flex-direction: column;
}

.sort-section {
  margin: 20px 0px;
}

.sort-section label {
  font-size: 1.1rem;
}

.player-score {
  padding: 8px 0;
  display: flex;
  align-items: center;
  border-top: 1px solid white;
  border-bottom: 1px solid white;
  justify-content: space-evenly;
  font-size: 1rem;
}

.player-name {
  margin-right: 10px;
}

.tile-section {
  display: flex;
  --s: 69px;
  --m: 1px;
  --f: calc(1.732 * var(--s) + 4 * var(--m) - 1px);
}

.container {
  font-size: 0;
  padding: 0 10px;
}

.container div {
  width: var(--s);
  margin: var(--m);
  height: calc(var(--s) * 1.1547);
  display: inline-block;
  font-size: initial;
  clip-path: polygon(0% 25%, 0% 75%, 50% 100%, 100% 75%, 100% 25%, 50% 0%);
  background-color: #2c3542;
  margin-bottom: calc(var(--m) - var(--s) * 0.2885);
  position: relative;
}

.container::before {
  content: "";
  width: calc(var(--s) / 2 + var(--m));
  float: left;
  height: 120%;
  shape-outside: repeating-linear-gradient(#0000 0 calc(var(--f) - 3px), #000 0 var(--f));
}

.number-tile {
  content: var(--number);
  position: absolute;
  color: white;
  display: block;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.tile:hover:not(.number-tile) {
  background-color: var(--hovered);
}

.tile:hover:not(.number-tile)::after {
  content: var(--number);
  position: absolute;
  color: white;
  display: block;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}
